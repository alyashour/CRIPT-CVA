name: Build and Release macOS Executable

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v0.1.0, etc.
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    permissions: write-all
    runs-on: macos-latest  # Run the job on a macOS environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Checkout the repository code
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.3  # Get the version from the previous step

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv  # Ensure Pipenv is installed
          pipenv install -d # Install dependencies (including PyInstaller)

      - name: Build with PyInstaller
        run: |
          pipenv run pyinstaller --onefile --windowed --icon=app.ico src/main.py

      - name: Verify app creation
        run: |
          ls dist  # List files in the dist folder to ensure the app exists
          ls dist/main.app  # List contents of the .app bundle to check if it's there
          
      # - name: Run app to verify it works
      #   run: |
      #     # Try to launch the app and wait for 10 seconds
      #     open dist/main.app  # Use 'open' to launch a .app file on macOS
      #     sleep 20  # Give it time to open
      #     ps aux | grep "main.app"  # Check if the app is running in the process list

      - name: Zip the .app bundle
        run: |
          cd dist
          zip -r app.zip main.app  # Create a zip of the .app bundle

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/app.zip  # This ensures the entire .app bundle is uploaded
          tag_name: 0.1.0

      - name: Upload the release asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/app.zip # Ensure the entire .app bundle is uploaded to GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub token to authenticate API requests
